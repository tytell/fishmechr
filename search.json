[{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"computing-kinematic-parameters","dir":"Articles","previous_headings":"","what":"Computing kinematic parameters","title":"fishmechr","text":"compute midline swimming kinematics accurately, follow steps . Compute arc length along curve body. points consistently arc length, interpolate points one consistent point body. often useful smoothing part step. Compute center location. Ideally center mass, approximated variety ways. Compute body curvature excursion relative central axis, . Estimate phase oscillation point. can either detect peaks zero crossings use mathematical technique called Hilbert transform. Use temporal spatial derivatives phase estimate oscillation frequency, body wavelength, body wave speed. Based phase, identify individual undulation cycles. Within cycle, can identify range body excursion curvature compute amplitude.","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"compute-arc-length","dir":"Articles","previous_headings":"Computing kinematic parameters","what":"1. Compute arc length","title":"fishmechr","text":"kinematic variables best specified terms arc length ss, distance along body head particular point ii: si=∑j=2i[(xj−xj−1)2+(yj−yj−1)2] s_i = \\sum_{j=2}^\\left[ (x_j - x_{j-1})^2 + (y_j - y_{j-1})^2 \\right]  Using arc length better something like xx coordinate two reasons. First, often fish swim precisely along xx axis, means points need rotated. Second, many fish swim relatively large amplitude motions, means distance along curve larger distance along swimming direction, particularly near tail amplitudes higher.","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"interpolate-points-for-a-consistent-position","dir":"Articles","previous_headings":"Computing kinematic parameters","what":"2. Interpolate points for a consistent position","title":"fishmechr","text":"Ideally, want point represent consistent location fish’s body. Particularly fish clear landmarks along body, may able mark middle easily, points may slide along fish’s length. can use spline interpolate points consistent location. Digitized points often error. part interpolation process, can use smoothing spline smooth error.","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"estimate-a-center-location","dir":"Articles","previous_headings":"Computing kinematic parameters","what":"3. Estimate a center location","title":"fishmechr","text":"center location weighted average location. midline defined xx yy coordinates (xi,yi)(x_i, y_i), four main ways identify center location. mim_i mass segment located (xi,yi)(x_i, y_i) (xi+1,yi+1)(x_{+1}, y_{+1}), xcom=12M∑=1n−1mi(xi+1+xi) x_{com} = \\frac{1}{2 M} \\sum_{=1}^{n-1} m_i \\left( x_{+1} + x_i \\right)  ycom=12M∑=1n−1mi(yi+1+yi) y_{com} = \\frac{1}{2 M} \\sum_{=1}^{n-1} m_i \\left( y_{+1} + y_i \\right)   MM total mass fish. know mass distribution true masses segments, also use mim_i fraction total mass segment ii MM 1. know mass distribution, can approximate mim_i several ways. best use width height body. body, without fins, elliptical cross section, wiw_i horizontal width hih_i dorso-ventral height point ii, volume segment (xi,yi)(x_i, y_i) (xi+1,yi+1)(x_{+1}, y_{+1}) Vi=πΔsi(wihi+12Δwihi+12Δhiwi+13ΔwiΔhi) V_i = \\pi \\Delta s_i \\left( w_i h_i + \\tfrac{1}{2} \\Delta w_i h_i + \\tfrac{1}{2} \\Delta h_i w_i + \\tfrac{1}{3} \\Delta w_i \\Delta h_i \\right) Δsi=si+1−si\\Delta s_i = s_{+1} - s_i, Δwi=wi+1−wi\\Delta w_i = w_{+1} - w_i, Δhi=hi+1−hi\\Delta h_i = h_{+1} - h_i. approximate mi≈ρVim_i \\approx \\rho V_i, ρ\\rho density fish, assume constant, xcom=∑=1n−1[Vi(xi+1+xi)]2∑=1n−1Vi x_{com} = \\frac{\\sum_{=1}^{n-1} \\left[ V_i \\left( x_{+1} + x_i \\right) \\right] }  { 2 \\sum_{=1}^{n-1} V_i } ycom=∑=1n−1[Vi(yi+1+yi)]2∑=1n−1Vi y_{com} = \\frac{\\sum_{=1}^{n-1} \\left[ V_i \\left( y_{+1} + y_i \\right) \\right] }  { 2 \\sum_{=1}^{n-1} V_i } Often width visible camera , height known. case, reasonable approximation mi∝wim_i \\propto w_i, xcom=∑=1nwixi∑=1nwi x_{com} = \\frac{\\sum_{=1}^{n} w_i x_i}{\\sum_{=1}^{n} w_i} ycom=∑=1nwiyi∑=1nwi y_{com} = \\frac{\\sum_{=1}^{n} w_i y_i}{\\sum_{=1}^{n} w_i} Choose one point along body use center. snout point close center mass. called “stretched-straight center mass”, tends give inaccurate estimates velocity acceleration.","code":""},{"path":[]},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"curvature","dir":"Articles","previous_headings":"Computing kinematic parameters > 4. Estimate curvature or lateral excursion","what":"Curvature","title":"fishmechr","text":"2D curvature κ\\kappa midline horizontal plane often useful variable compute. particular, usually proportional muscle strain point body (Shadwick 1998, Katz 1999). contrast, lateral excursion body usually good estimate muscle strain (Shadwick 1998). Mathematically, curvature can thought two different ways. First, inverse radius curvature: radius circle drawn three successive points. smaller radius curvature, sharper body bend, larger value κ\\kappa. estimate curvature defined following equation κ=[∂x∂s∂2y∂s2−∂y∂s∂2x∂s2][(∂x∂s)2+(∂y∂s)2]−3/2 \\kappa = \\left[ \\frac{\\partial x}{\\partial s} \\frac{\\partial^2 y}{\\partial s^2} - \\frac{\\partial y}{\\partial s} \\frac{\\partial^2 x}{\\partial s^2} \\right] \\left[ \\left( \\frac{\\partial x}{\\partial s} \\right)^2 + \\left( \\frac{\\partial y}{\\partial s} \\right)^2 \\right]^{-3/2} Second, spatial derivative angle segment. segment arc length ss angle θ\\theta horizontal axis, curvature κ=∂θ∂s \\kappa = \\frac{\\partial \\theta}{\\partial s}  angle segment ii θi=tan−1(yi+1−yi,xi+1−xi)\\theta_i = \\tan^{-1}(y_{+1} - y_i, x_{+1} - x_i). Although formulas mathematically equivalent, slightly different properties depending measurement error xx yy positions.","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"lateral-excursion","dir":"Articles","previous_headings":"Computing kinematic parameters > 4. Estimate curvature or lateral excursion","what":"Lateral excursion","title":"fishmechr","text":"One can also estimate body phase, wavelength wave speed, based excursion body relative primary axis. suggest using singular value decomposition (SVD) estimate primary axis, using low-pass filter remove oscillations tail beat frequency higher. matrix xx yy coordinates points along body specific time, 𝐗\\mathbf{X}𝐗n×2=(x1y1x2y2⋮⋮xnyn) \\mathbf{X}_{n\\times2} =  \\begin{pmatrix}  x_1 & y_1 \\\\ x_2 & y_2 \\\\ \\vdots & \\vdots \\\\ x_n & y_n \\end{pmatrix}  subscript indicates size matrix (nn points along body 2). First, center axis subtracting location center mass mean column, produce matrix 𝐗𝐂\\mathbf{X^C}, centered around 0. singular value decomposition allows write matrix form 𝐗n×2C=𝐔n×n𝚺n×2𝐕2×2T. \\mathbf{X}^C_{n\\times2} = \\mathbf{U}_{n\\times n} \\mathbf{\\Sigma}_{n \\times 2} \\mathbf{V}_{2 \\times 2}^T.  matrix 𝐕2×2\\mathbf{V}_{2 \\times 2} represents principal axes body frame. matrix can estimated time point, produce time-varying matrix 𝐕(t)\\mathbf{V}(t). Assuming amplitude relatively small, first column 𝐕\\mathbf{V} represents unit vector pointing along primary axis body (call 𝐚̂(t)\\mathbf{\\hat{}}(t) second column unit vector normal primary axis. suggest using low pass filter cutoff frequency tail beat frequency smooth components 𝐚̂(t)\\mathbf{\\hat{}}(t) vector, making sure normalize smoothing. See implementation details .","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"estimate-phase","dir":"Articles","previous_headings":"Computing kinematic parameters","what":"5. Estimate phase","title":"fishmechr","text":"estimate undulation frequency, body wavelength, wave speed, consider simple equation midline. Fish swim using traveling wave curvature κs\\kappa_s (lateral excursion) defined arc length ss along body κ(s,t)=(s)cos(2π[sλ−ft])\\begin{equation} \\kappa(s, t) = (s) \\cos\\left(2\\pi \\left[ \\frac{s}{\\lambda} - f t \\right] \\right)  \\end{equation} (s)(s) wave amplitude, kk wave length, ff oscillation frequency, tt time. case, phase oscillation ϕ(s,t)\\phi(s, t) particular point along body approximately equal argument cosine, 2π(s/λ−ft)2\\pi \\left( s / \\lambda - f t \\right). amplitude AA varies quickly time space, approximation may exactly correct. can estimate phase accurately, can use spatial (.e., respect ss) temporal derivative estimate λ\\lambda, body wavelength, ff undulation frequency. , describe two methods estimating phase.","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"use-the-hilbert-transform","dir":"Articles","previous_headings":"Computing kinematic parameters > 5. Estimate phase","what":"Use the Hilbert transform","title":"fishmechr","text":"One convenient relatively robust way estimate phase body point involves use Hilbert transform 𝐇\\mathbf{H}, procedure uses Fourier transform estimate periodic signal 90deg shifted relative another. essence, given cosine signal, Hilbert transform returns sine amplitude frequency. utility operation lets us estimate ``analytic signal’’, complex-valued signal magnitude complex number amplitude wave phase angle complex number phase signal. can take Hilbert transform estimate analytic signal curvature lateral excursion κ*(s,t)=κ(s,t)+i𝐇{κ(s,t)}\\kappa^*(s, t) = \\kappa(s, t) + \\mathbf{H}\\{\\kappa(s, t)\\} ii imaginary number. (Note hilbert function R Python returns full analytic signal, just imaginary component written ). complex number C=+ibC = + ib, magnitude denoted ||C||=[a2+b2]1/2||C|| = \\left[ ^2 + b^2 \\right]^{1/2} phase angle denoted ∠C=tan−1(b/)\\angle C = \\tan^{-1} (b / ). One can also estimate analytic signal lateral excursion body z(s,t)z(s, t), zz lateral position point body, relative overall axis body. suggest using singular value decomposition estimate central body axis using low-pass filter cutoff frequency lower tail beat frequency remove tail beat oscillation, described . analytic signal thus provides estimate phase can estimated continuous function time position along body. techniques estimating phase require identifying particular features signal (peaks zero crossings) therefore estimate phase continuous signal. estimated phase ϕ̂\\hat{\\phi} thus ϕ̂(s,t)=∠κ*(s,t).\\hat{\\phi}(s, t) = \\angle \\kappa^*(s, t). traveling wave, phase, estimated , equal argument cosine function traveling wave equation , ϕ̂(s,t)=2π[s/λ−ft]\\hat{\\phi}(s, t) = 2\\pi [s/\\lambda - f t].","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"numerical-considerations-for-the-hilbert-transform","dir":"Articles","previous_headings":"Computing kinematic parameters > 5. Estimate phase","what":"Numerical considerations for the Hilbert transform","title":"fishmechr","text":"Hilbert transform works well analysis signals centered around zero consist many relatively smooth tailbeats. suggest using curvature κ\\kappa, rather something like lateral position yy coordinate body. use Hilbert transform lateral position, important subtract baseline value use high pass filter ensure signal centered around zero. Similarly, signal noisy, phase ϕ̂\\hat{\\phi} increase steadily derivatives used estimate f̂\\hat{f} λ̂\\hat{\\lambda} meaningful. best filter input signal using bandpass low pass filter oscillations smooth. programming languages, one use function atan2 estimate phase (atan), gives angle ranges around full circle (rather 0 180 degrees). However, output atan2 jump (usually π\\pi −π-\\pi) tt ss increase. estimate frequency wavelength, performing derivatives, one estimate smoothly increasing phase using function unwrap, searches jumps removes .","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"detect-peaks-and-zero-crossings","dir":"Articles","previous_headings":"Computing kinematic parameters > 5. Estimate phase","what":"Detect peaks and zero crossings","title":"fishmechr","text":"can also estimate phase detecting specific features oscillation, peaks zero crossings, interpolating continuous value phase using spline curve. cosine function, , positive peak phase ϕ̂=0\\hat{\\phi} = 0, downward zero crossing phase π/2\\pi/2, negative peak (.e., trough) phase π\\pi, upward zero crossing phase 3π/23\\pi/2. identifying features corresponding phases, one can interpolate continuous phase. Using method requires careful error checking. particular, peaks can identified erroneously, particularly noise signal. recommend using strong smoothing filter curvature lateral excursion estimating phase. See examples numerical details .","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"use-the-phase-to-estimate-frequency-and-wavelength","dir":"Articles","previous_headings":"Computing kinematic parameters","what":"6. Use the phase to estimate frequency and wavelength","title":"fishmechr","text":"can use estimated phase compute frequency wavelength taking derivatives time space, respectively, f̂(t)=12π∂∂tϕ̂(s,t)\\hat{f}(t) = \\frac{1}{2\\pi} \\frac{\\partial}{\\partial t} \\hat{\\phi}(s,t) Estimated way, frequency every point along body. Therefore, can average f̂\\hat{f} across body choose single point along body (usually tail) use estimate frequency. λ̂s(t)=2π(∂∂sϕ̂(s,t))−1\\hat{\\lambda}_s(t) = 2 \\pi \\left( \\frac{\\partial}{\\partial s} \\hat{\\phi}(s,t) \\right)^{-1} body wave speed V̂\\hat{V} product two: V̂(t)=λ̂(s,t)f̂(t)\\hat{V}(t) = \\hat{\\lambda}(s, t) \\hat{f}(t)","code":""},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"quantify-swimming-parameters-on-a-cycle-by-cycle-basis","dir":"Articles","previous_headings":"Computing kinematic parameters","what":"7. Quantify swimming parameters on a cycle-by-cycle basis","title":"fishmechr","text":"estimated good undulation phase, straightforward quantify parameters vary every cycle. Usually, need define overall phase entire body oscillation. ’s best choose reliable phase estimate, usually phase tail tip point near tail (e.g., phî(L,t)\\hat{phi}(L, t), LL body length). phase increases past 2π2\\pi, jump back 0. programming languages functioned called unwrap looks jumps removes , producing steadily increasing phase, refer Φ̂c(t)\\hat{\\Phi}_c(t). cycle number C(t)=⌊Φ̂c(t)/(2π)⌋ C(t) = \\left\\lfloor\\hat{\\Phi}_c(t) / (2\\pi) \\right\\rfloor  L brackets denote floor operation, rounding next lowest integer value. example, find body amplitude, search within cycle find range motion body point, divide two. See details .","code":""},{"path":[]},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"data-structure","dir":"Articles","previous_headings":"Example analysis of a lamprey data set","what":"Data structure","title":"fishmechr","text":"data set lampreydata included fishmechr package. swimming kinematics data sets similar structure: * time frame column. ’s often good keep data set. (, t frame) * column identifies point body. factor variable, names body part (like returned Sleap DeepLabCut), long clear order head tail. numeric variable, points numbered 1 nn, 1 snout nn tail. (point). * x y coordinates point. Currently, algorithms designed work 2D movements horizontal plane. (mxmm mymm, indicating “midline” x y points mm) plot shows midlines two frames.","code":"head(lampreydata) #>      t frame point mxmm mymm #> 1 0.02     1     1   NA   NA #> 2 0.02     1     2   NA   NA #> 3 0.02     1     3   NA   NA #> 4 0.02     1     4   NA   NA #> 5 0.02     1     5   NA   NA #> 6 0.02     1     6   NA   NA lampreydata |>    filter(frame %in% c(10, 20)) |>    mutate(frame = factor(frame)) |>    ggplot(aes(x = mxmm, mymm, color = frame, group = frame)) +   geom_path() +   coord_fixed()"},{"path":[]},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"compute-arc-length-1","dir":"Articles","previous_headings":"Kinematics process","what":"Compute arc length","title":"fishmechr","text":"plot arc length points along body. can see ’re generally location, exactly, ’ll need interpolate ’re place. ’s interpolation. Now points always arc length. Sometimes requires extrapolating get tail position.","code":"lampreydata <-   lampreydata |>    group_by(frame) |>   mutate(arclen0 = arclength(mxmm, mymm)) lampreydata |>    ungroup() |>    filter(point %in% c(5, 10, 18)) |>    ggplot(aes(x = t, y = arclen0, color = point)) +   geom_point() #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`). lampreydata <- lampreydata |>    interpolate_points_df(arclen0, mxmm, mymm, spar = 0.2,                         tailmethod = 'extrapolate',                         .out = c(arclen='arclen', xs='mxmm_s', ys='mymm_s')) lampreydata |>    filter(frame %in% c(10, 20)) |>    mutate(frame = factor(frame)) |>    ggplot(aes(x = mxmm, mymm, color = frame, group = frame)) +   geom_point(shape = 10) +   geom_path() +   geom_point(aes(x = mxmm_s, y = mymm_s), shape = 5) +   coord_fixed()"},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"get-the-width","dir":"Articles","previous_headings":"Kinematics process","what":"Get the width","title":"fishmechr","text":"digitized width ammocoete ventral view. assume width distance one lateral edge (like diameter), distance center edge (like radius). ’s expressed terms body lengths, along body width .","code":"fishwidth |>    ggplot(aes(x = s, y = ammowidth)) +   geom_path() +   labs(x = 'Arc length (BL)', y = 'Width (BL)') lampreydata <-   lampreydata |>    group_by(frame) |>    mutate(width = interpolate_width(fishwidth$s, fishwidth$ammowidth, arclen))"},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"compute-the-center-of-mass","dir":"Articles","previous_headings":"Kinematics process","what":"Compute the center of mass","title":"fishmechr","text":"","code":"lampreydata <-   lampreydata |>    get_midline_center_df(arclen0, mxmm_s,mymm_s, width=width) #> Estimating center of mass based on width  lampreydata |>    filter(frame %in% c(10, 20, 30, 40, 50)) |>    ggplot(aes(x = mxmm_s, y = mymm_s, color = frame)) +   geom_path(aes(group = frame)) +   geom_point(data = ~filter(.x, point == 1), aes(x = xcom, y = ycom)) +   coord_fixed()"},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"compute-curvature","dir":"Articles","previous_headings":"Kinematics process","what":"Compute curvature","title":"fishmechr","text":"computes curvature two different methods. Compare results. aren’t different, although “xy” method gives slightly higher peaks. Plot curvature function time two different points along body. Hilbert analysis work well, close sinusoidal centered around 0.","code":"lampreydata <-   lampreydata |>    group_by(frame) |>    mutate(curve_ang = curvature(arclen0, mxmm_s, mymm_s),          curve_xy = curvature(arclen0, mxmm_s, mymm_s, method=\"xy\")) lampreydata |>    filter(frame %in% c(10, 20)) |>    mutate(frame = factor(frame)) |>    ggplot(aes(x = arclen0, color = frame, group = frame)) +   geom_path(aes(y = curve_ang), linetype='solid') +   geom_path(aes(y = curve_xy), linetype='dashed') #> Warning: Removed 4 rows containing missing values or values outside the scale range #> (`geom_path()`). #> Removed 4 rows containing missing values or values outside the scale range #> (`geom_path()`). lampreydata |>    filter(point %in% c(10, 18)) |>   mutate(point = factor(point)) |>    ggplot(aes(x = t, y = curve_ang, color = point)) +   geom_path() #> Warning: Removed 4 rows containing missing values or values outside the scale range #> (`geom_path()`)."},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"get-excursion","dir":"Articles","previous_headings":"Kinematics process","what":"Get excursion","title":"fishmechr","text":"extracts central swimming axis.  Similar curvature, can compute phases based lateral excursions (b). , need mostly sinusoidal centered around zero.","code":"lampreydata <- lampreydata |>    mutate(mxmm_ctr = mxmm_s - xcom,          mymm_ctr = mymm_s - ycom) |>    get_primary_swimming_axis_df(t, mxmm_ctr, mymm_ctr, .frame=frame) lampreydata |>    filter(frame %in% c(10, 20, 30)) |>    ggplot(aes(x = mxmm, y = mymm, color = frame)) +   geom_path(aes(group = frame)) +   geom_segment(data = ~ filter(.x, point == 20),                 aes(x = xcom, y = ycom,                     xend = xcom - 50*swimaxis_x,                     yend = ycom - 50*swimaxis_y)) +   geom_point(data = ~ filter(.x, point == 20),                 aes(x = xcom, y = ycom), color = 'red') +   facet_grid(frame ~ .) +   coord_fixed() lampreydata |>    filter(point %in% c(10, 18)) |>   mutate(point = factor(point)) |>    ggplot(aes(x = t, y = exc, color = point)) +   geom_path() #> Warning: Removed 4 rows containing missing values or values outside the scale range #> (`geom_path()`)."},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"phase","dir":"Articles","previous_headings":"Kinematics process","what":"Phase","title":"fishmechr","text":"Now compute phase body point oscillates time, looking either curvature curve_ang excursion b. hilbert_phase checks results gives warnings finds things might cause problems. * checks make sure input data NA. give warning input data NA, least data NA. * checks input signal seems oscillate around 0. * looks whether phase mostly advances time. cases phase seems run backwards, ’s often good indication data isn’t smoothed enough. case , warning point 2, close head, curvature tends quite low, can ignore warning. Compare two phase estimates. expect slopes , offset 2π2\\pi places. solid lines phase based curvature dashed phase based excursion. Note curvature based phase (solid line) tends fluctuate lot point 3, near head curvature small.","code":"lampreydata <-   lampreydata |>    arrange(frame, desc(point)) |>    group_by(point) |>    mutate(ph_c = hilbert_phase(curve_ang),          ph_e = hilbert_phase(exc),          ph_p = peak_phase(exc)) #> Warning: There were 43 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `ph_c = hilbert_phase(curve_ang)`. #> ℹ In group 2: `point = 2`. #> Caused by warning in `hilbert_phase()`: #> ! Phase seems to go backwards a lot, which may indicate an overly noisy signal #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 42 remaining warnings. lampreydata |>    ungroup() |>    filter(point %in% c(3, 8, 15, 18)) |>    mutate(point = factor(point)) |>    pivot_longer(cols = c(ph_c, ph_e, ph_p), names_to = \"method\", values_to = \"phase\") |>    ggplot(aes(x = t, y = phase, color = point, linetype = method)) +   geom_path() +    facet_wrap(~point) #> Warning: Removed 93 rows containing missing values or values outside the scale range #> (`geom_path()`)."},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"frequency","dir":"Articles","previous_headings":"Kinematics process","what":"Frequency","title":"fishmechr","text":"described , time derivative phase frequency. , can compute frequency point along body, although . # Body wavelength Body wavelength, described , derivative phase point along body respect arc length. Phase typically decreases along body, indicates backward traveling wave. apparent discontinuity ss = 50mm real. just reflects fact phase goes 00 2π2\\pi wraps around back 0. get rid using unwrap function, applied across spatial dimension (equivalently, using group_by time frame number). phase across body discontinuities removed.","code":"lampreydata |>    group_by(point) |>    mutate(freq_c = get_frequency(t, ph_c, method='deriv'),          freq_e = get_frequency(t, ph_e, method='deriv'),          freq_p = get_frequency(t, ph_p, method='deriv')) |>    pivot_longer(cols = c(freq_c, freq_e, freq_p), names_to = \"method\", values_to = \"freq\") |>    filter(point %in% c(3, 15, 18)) |>    mutate(point = factor(point)) |>    ggplot(aes(x = t, y = freq, color = point, shape = method)) +   scale_shape_manual(values = c(1, 17, 22)) +   geom_point() +   facet_wrap(~point) #> Warning: There were 4 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `freq_c = get_frequency(t, ph_c, method = \"deriv\")`. #> ℹ In group 2: `point = 2`. #> Caused by warning in `get_frequency()`: #> ! Phase seems to go backwards a lot, which may indicate an overly noisy signal #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 3 remaining warnings. #> Warning: Removed 79 rows containing missing values or values outside the scale range #> (`geom_point()`). lampreydata |>    filter(frame %in% c(60, 80)) |>    group_by(frame) |>    mutate(phbody = ph_p) |>   ggplot(aes(x = arclen, y = phbody, color = frame)) +   geom_path(aes(group = frame)) #> Warning: Removed 20 rows containing missing values or values outside the scale range #> (`geom_path()`). lampreydata |>    filter(frame %in% c(50, 60)) |>    group_by(frame) |>    mutate(phbody = gsignal::unwrap(ph_e)) |>   ggplot(aes(x = arclen, y = phbody, color = frame)) +   geom_path(aes(group = frame))"},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"methods-of-estimating-wavelength","dir":"Articles","previous_headings":"Kinematics process","what":"Methods of estimating wavelength","title":"fishmechr","text":"several ways estimate body wavelength based body phase, different advantages disadvantages. function get_wavelength can run . point along body, can estimate derivative phase respect arc length. gives comprehensive results, , particular, makes fairly simple consider whether wavelength varies along body, also sensitive noise. can fit line data along body take slope line. method least sensitive noise, gives single value along entire body. can look distance along body phase changes full half cycle. look phase tail step backward along body find point ’s either full half cycle tail, distance represents full half wave, respectively. get_wavelength makes process accurate using simple linear interpolation find distance represents exactly 1 0.5 waves. phase tends poorly estimated body points anterior. get_wavelength allows specify formula ignore certain locations estimate. example single frame. ’re ignoring points less 30mm head. , can see methods give similar results, different numbers values different resolution along body. suggest “halfcycle” option good, relatively robust compromise. see wavelength estimated based curvature slightly noisier curvature based excursion, fluctuate time. plot shows wavelength function body position estimation method. curvature-based wavelengths seem increase along body (aside erroneous low values close tail), excursion-based wavelengths tend decrease moving toward tail.","code":"w <-   lampreydata |>    arrange(frame, arclen) |>    filter(frame %in% c(40)) |>    group_by(frame) |>    mutate(ph2 = gsignal::unwrap(ph_e),          wavelen_deriv = get_wavelength(arclen, ph2, method=\"deriv\",                                    ignore_arclen_vals = \\(s) s < 30),          wavelen_slope = get_wavelength(arclen, ph2, method=\"slope\",                                    ignore_arclen_vals = \\(s) s < 30),          wavelen_cycle = get_wavelength(arclen, ph2, method=\"cycle\",                                    ignore_arclen_vals = \\(s) s < 30,                                    sort_arclen = FALSE),          wavelen_halfcycle = get_wavelength(arclen, ph2, method=\"halfcycle\",                                    ignore_arclen_vals = \\(s) s < 30,                                    sort_arclen = TRUE)) w |>    pivot_longer(cols = contains(\"wavelen\"), names_to = \"method\", values_to = \"wavelen\") |>    ggplot(aes(x = arclen, y = wavelen, color = method, shape = method)) +   geom_point() #> Warning: Removed 41 rows containing missing values or values outside the scale range #> (`geom_point()`). lampreydata |>    arrange(frame, arclen) |>    group_by(frame) |>    mutate(phbody_e = gsignal::unwrap(ph_e),          phbody_c = gsignal::unwrap(ph_c),          wavelen_exc = get_wavelength(arclen, phbody_e, method=\"halfcycle\",                                     ignore_arclen_vals = \\(s) s < 30),          wavelen_curve = get_wavelength(arclen, phbody_c, method=\"halfcycle\",                                     ignore_arclen_vals = \\(s) s < 30)) |>    pivot_longer(cols = contains(\"wavelen\"), names_to = \"method\", values_to = \"wavelen\") |>    ggplot(aes(x = t)) +   geom_point(aes(y = wavelen, color = arclen, shape=method)) +   scale_shape_manual(values = c(15, 4)) #> Warning: Removed 2869 rows containing missing values or values outside the scale range #> (`geom_point()`). lampreydata |>    arrange(frame, arclen) |>    group_by(frame) |>    mutate(phbody_e = gsignal::unwrap(ph_e),          phbody_c = gsignal::unwrap(ph_c),          wavelen_exc = get_wavelength(arclen, phbody_e, method=\"halfcycle\",                                     ignore_arclen_vals = \\(s) s < 30),          wavelen_curve = get_wavelength(arclen, phbody_c, method=\"halfcycle\",                                     ignore_arclen_vals = \\(s) s < 30)) |>    pivot_longer(cols = contains(\"wavelen\"), names_to = \"method\", values_to = \"wavelen\") |>    ggplot(aes(x = arclen)) +   geom_point(aes(y = wavelen, color = arclen, shape=method)) +   scale_shape_manual(values = c(15, 4)) +   facet_wrap(~method) #> Warning: Removed 2869 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://tytell.github.io/fishmechr/articles/fishmechr.html","id":"amplitude","dir":"Articles","previous_headings":"","what":"Amplitude","title":"fishmechr","text":"estimate amplitude, ’s helpful set overall cycle number whole body. define based excursion tail point. get_body_cycle_numbers also excludes partial cycles. Now, can use group_by cycles find cycle--cycle values. , look range excursion variable b. Half range amplitude, can define point body, four cycles present trial.","code":"lampreydata <-   lampreydata |>    get_body_cycle_numbers_df(ph_p, 20) |>    arrange(t, point)  lampreydata #> # A tibble: 1,600 × 24 #> # Groups:   point [20] #>        t frame point  mxmm  mymm arclen0 arclen mxmm_s mymm_s width  xcom  ycom #>    <dbl> <int> <int> <dbl> <dbl>   <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> #>  1  0.02     1     1    NA    NA      NA   0        NA     NA  2.48    NA    NA #>  2  0.02     1     2    NA    NA      NA   8.13     NA     NA  2.61    NA    NA #>  3  0.02     1     3    NA    NA      NA  16.3      NA     NA  2.75    NA    NA #>  4  0.02     1     4    NA    NA      NA  24.4      NA     NA  2.81    NA    NA #>  5  0.02     1     5    NA    NA      NA  32.5      NA     NA  2.83    NA    NA #>  6  0.02     1     6    NA    NA      NA  40.7      NA     NA  2.85    NA    NA #>  7  0.02     1     7    NA    NA      NA  48.8      NA     NA  2.88    NA    NA #>  8  0.02     1     8    NA    NA      NA  56.9      NA     NA  2.80    NA    NA #>  9  0.02     1     9    NA    NA      NA  65.1      NA     NA  2.70    NA    NA #> 10  0.02     1    10    NA    NA      NA  73.2      NA     NA  2.61    NA    NA #> # ℹ 1,590 more rows #> # ℹ 12 more variables: curve_ang <dbl>, curve_xy <dbl>, mxmm_ctr <dbl>, #> #   mymm_ctr <dbl>, swimaxis_x <dbl>, swimaxis_y <dbl>, exc_x <dbl>, exc <dbl>, #> #   ph_c <dbl>, ph_e <dbl>, ph_p <dbl>, cycle <dbl> lampreydata |>    group_by(point, cycle) |>    summarize(amp = (max(exc) - min(exc)) / 2,             arclen = mean(arclen)) |>    ggplot(aes(x = arclen, y = amp, color = cycle)) +   geom_path(aes(group = cycle)) #> `summarise()` has grouped output by 'point'. You can override using the #> `.groups` argument. #> Warning: Removed 20 rows containing missing values or values outside the scale range #> (`geom_path()`)."},{"path":"https://tytell.github.io/fishmechr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Tytell. Author, maintainer.","code":""},{"path":"https://tytell.github.io/fishmechr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tytell E (2024). fishmechr: Computes Kinematic Parameters Swimming. R package version 0.0.0.9000, https://tytell.github.io/fishmechr/.","code":"@Manual{,   title = {fishmechr: Computes Kinematic Parameters for Swimming},   author = {Eric Tytell},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://tytell.github.io/fishmechr/}, }"},{"path":"https://tytell.github.io/fishmechr/reference/apply_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a filter constructed with build_filter — apply_filter","title":"Apply a filter constructed with build_filter — apply_filter","text":"Wrapper function gsignal::filtfilt apply filter dataset. Potentially skips NAs data set (see skip_na() details).","code":""},{"path":"https://tytell.github.io/fishmechr/reference/apply_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a filter constructed with build_filter — apply_filter","text":"","code":"apply_filter(filt, x, na.skip = TRUE)"},{"path":"https://tytell.github.io/fishmechr/reference/apply_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a filter constructed with build_filter — apply_filter","text":"filt Filter returned build_filter() gsignal::butter() x Vector data filter na.skip (TRUE FALSE) skip NAs data set.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/apply_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a filter constructed with build_filter — apply_filter","text":"Filtered data set","code":""},{"path":"https://tytell.github.io/fishmechr/reference/arclength.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate arc length along a 2D curve — arclength","title":"Calculate arc length along a 2D curve — arclength","text":"Computes straight-line distance points curve adds get arc length.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/arclength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate arc length along a 2D curve — arclength","text":"","code":"arclength(x, y)"},{"path":"https://tytell.github.io/fishmechr/reference/arclength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate arc length along a 2D curve — arclength","text":"x, y Coordinates curve.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/arclength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate arc length along a 2D curve — arclength","text":"Arc length along curve.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/arclength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate arc length along a 2D curve — arclength","text":"","code":"# compute arc length in each frame from the lamprey data set lampreydata |>   group_by(frame) |>   mutate(arclen = arclength(mxmm, mymm)) #> Error in mutate(group_by(lampreydata, frame), arclen = arclength(mxmm,     mymm)): could not find function \"mutate\""},{"path":"https://tytell.github.io/fishmechr/reference/build_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a smoothing filter — build_filter","title":"Constructs a smoothing filter — build_filter","text":"Wrapper function gsignal::butter construct bandpass (low high pass) filter particular frequency. Uses Sos form filter, works better numerically particularly low frequencies.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/build_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a smoothing filter — build_filter","text":"","code":"build_filter(lo = NULL, hi = NULL, sampfreq, order = 13)"},{"path":"https://tytell.github.io/fishmechr/reference/build_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a smoothing filter — build_filter","text":"lo Lower frequency cutoff Hz. lo specified, build_filter constructs high pass filter hi Upper frequency cutoff Hz. hi specified, build_filter constructs high pass filter sampfreq Sampling frequency data Hz. order (optional) Order filter","code":""},{"path":"https://tytell.github.io/fishmechr/reference/build_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a smoothing filter — build_filter","text":"Filter parameters Sos form","code":""},{"path":"https://tytell.github.io/fishmechr/reference/build_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a smoothing filter — build_filter","text":"","code":"# Low pass filter with a cutoff at 0.5Hz for data sampled at 100Hz lopass <- build_filter(lo=0.5, sampfreq=100)  # Band pass filter that passes frequencies between 0.5 and 10Hz bandpass <- build_filter(lo=0.5, hi=10, sampfreq=100)"},{"path":"https://tytell.github.io/fishmechr/reference/check.out.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check the .out and .out_default variables used in this package — check.out","title":"Helper function to check the .out and .out_default variables used in this package — check.out","text":".NULL, returns .out_default. .vector containing strings, checks make sure number strings .items .out_default .list named elements, checks make sure names present .out_default. Ignores names present .out_default, gives warning. elements .out_default ., uses values .out_default. Sorts items order .out_default.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/check.out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check the .out and .out_default variables used in this package — check.out","text":"","code":"check.out(.data, .out, .out_default, overwrite)"},{"path":"https://tytell.github.io/fishmechr/reference/check.out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check the .out and .out_default variables used in this package — check.out","text":".data Data frame .Name output columns .out_default Named list containing default names output columns overwrite TRUE FALSE overwrite columns.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/check.out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check the .out and .out_default variables used in this package — check.out","text":"updated .list.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/check.out.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper function to check the .out and .out_default variables used in this package — check.out","text":"Checks columns names data frame .data. Gives warning columns overwrite TRUE, error overwrite FALSE.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/check_if_overwrite_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a data frame has columns that we might overwrite — check_if_overwrite_columns","title":"Check if a data frame has columns that we might overwrite — check_if_overwrite_columns","text":"Helper function functions package create new columns data frame, check columns already present data frame.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/check_if_overwrite_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a data frame has columns that we might overwrite — check_if_overwrite_columns","text":"","code":"check_if_overwrite_columns(df, newcols, overwrite)"},{"path":"https://tytell.github.io/fishmechr/reference/check_if_overwrite_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a data frame has columns that we might overwrite — check_if_overwrite_columns","text":"df Data frame newcols Names columns, strings overwrite TRUE FALSE overwrite columns","code":""},{"path":"https://tytell.github.io/fishmechr/reference/check_if_overwrite_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if a data frame has columns that we might overwrite — check_if_overwrite_columns","text":"Produces warning columns present overwrite true, error overwrite false.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/check_if_overwrite_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a data frame has columns that we might overwrite — check_if_overwrite_columns","text":"","code":"df <- data.frame(a=c(1,2,3), b=c(1,2,3))  # this should give a warning check_if_overwrite_columns(df, c('a', 'd'), overwrite=TRUE) #> Warning: Data frame has columns that are assigned in 'eval'. Overwriting"},{"path":"https://tytell.github.io/fishmechr/reference/curvature.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates curvature for a single curve — curvature","title":"Estimates curvature for a single curve — curvature","text":"Estimates curvature either directly derivatives x y coordinates relative arc length, derivative segment angle relative arc length.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/curvature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates curvature for a single curve — curvature","text":"","code":"curvature(s, x, y, method = \"angle\")"},{"path":"https://tytell.github.io/fishmechr/reference/curvature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates curvature for a single curve — curvature","text":"s Arc length along body. x, y Coordinates point along body method (\"xy\" \"angle\") direct formula angle derivative","code":""},{"path":"https://tytell.github.io/fishmechr/reference/curvature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates curvature for a single curve — curvature","text":"Curvature.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/curvature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimates curvature for a single curve — curvature","text":"Assumes points order along curve head tail.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/deriv.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate first or second derivatives for dy/dx. — deriv","title":"Estimate first or second derivatives for dy/dx. — deriv","text":"Uses central differencing possible.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/deriv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate first or second derivatives for dy/dx. — deriv","text":"","code":"deriv(x, y, ord = 1, method = \"direct\", ends = \"forwardback\")"},{"path":"https://tytell.github.io/fishmechr/reference/deriv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate first or second derivatives for dy/dx. — deriv","text":"x x variable. need evenly spaced. y y variable. ord Order derivative (1 2). method Method taking second derivatives. Either 'direct' (default) Uses direct formula, based central difference forward backward differences, https://mathformeremortals.wordpress.com/2013/01/12/-numerical-second-derivative--three-points/ 'repeat' Repeat two first derivatives.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/deriv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate first or second derivatives for dy/dx. — deriv","text":"Derivative y relative x.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/fishmechr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fishmechr: Computes Kinematic Parameters for Swimming — fishmechr-package","title":"fishmechr: Computes Kinematic Parameters for Swimming — fishmechr-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://tytell.github.io/fishmechr/reference/fishmechr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fishmechr: Computes Kinematic Parameters for Swimming — fishmechr-package","text":"Maintainer: Eric Tytell eric.tytell@tufts.edu (ORCID)","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_body_cycle_numbers_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets oscillation cycle numbers for a midline data set — get_body_cycle_numbers_df","title":"Gets oscillation cycle numbers for a midline data set — get_body_cycle_numbers_df","text":"Extracts phase specific point along body (defined pointval) uses get_cycle_numbers() get cycle number. Joins cycle number data original data set cycle number defined point along body","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_body_cycle_numbers_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets oscillation cycle numbers for a midline data set — get_body_cycle_numbers_df","text":"","code":"get_body_cycle_numbers_df(   .data,   ph,   pointval,   .frame = frame,   .point = point,   .out = NULL,   overwrite = TRUE,   ... )"},{"path":"https://tytell.github.io/fishmechr/reference/get_body_cycle_numbers_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets oscillation cycle numbers for a midline data set — get_body_cycle_numbers_df","text":".data Data frame containing midlines ph Phase variable pointval Specific point body use define phase cycle number .frame, .point Columns identifying frames points (defaults frame point) .Name output column. Needs one element specifying name cycle variable, named list element named cycle). Default 'cycle' overwrite TRUE FALSE overwrite existing columns, present. ... Extra parameters supply get_cycle_numbers()","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_body_cycle_numbers_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets oscillation cycle numbers for a midline data set — get_body_cycle_numbers_df","text":"data frame containing new column cycle numbers named 'cycle' specified ..","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_cycle_numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets cycle numbers from a phase variable — get_cycle_numbers","title":"Gets cycle numbers from a phase variable — get_cycle_numbers","text":"Given phase variable increases, time phase passes 2 k pi, new cycle starts. function unwraps phase, increases steadily, takes floor phase divided 2 pi (another modulus), gets integer cycle.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_cycle_numbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets cycle numbers from a phase variable — get_cycle_numbers","text":"","code":"get_cycle_numbers(   ph,   unwrap = FALSE,   mod = 2 * pi,   exclude_partial_cycles = TRUE )"},{"path":"https://tytell.github.io/fishmechr/reference/get_cycle_numbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets cycle numbers from a phase variable — get_cycle_numbers","text":"ph Phase variable unwrap (TRUE FALSE) Unwrap phase variable. Note function work unless phase unwrapped, set unwrap FALSE phase unwrapped earlier. mod Modulus phase. Default 2*pi. exclude_partial_cycles (TRUE FALSE) Exclude cycles phase advance close 0 close 2pi.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_cycle_numbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets cycle numbers from a phase variable — get_cycle_numbers","text":"Integer cycle numbers size ph","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_cycle_numbers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets cycle numbers from a phase variable — get_cycle_numbers","text":"Optionally, try exclude partial cycles, setting cycle number NA cycles start phase close 0 progress phase close 2 pi. \"Close\" defined based average change phase.","code":""},{"path":[]},{"path":"https://tytell.github.io/fishmechr/reference/get_cycle_numbers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets cycle numbers from a phase variable — get_cycle_numbers","text":"","code":"# example phase that advances by slightly more than 3 cycles, modulo 2pi ph <- seq(0, 20, by = pi/10) %% (2*pi) get_cycle_numbers(ph, unwrap=TRUE) #>  [1]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  1  1  1  1 #> [26]  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  2  2  2  2  2  2  2  2  2 #> [51]  2  2  2  2  2  2  2  2  2  2 NA NA NA NA"},{"path":"https://tytell.github.io/fishmechr/reference/get_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates the cycle frequency based on time and phase — get_frequency","title":"Estimates the cycle frequency based on time and phase — get_frequency","text":"Estimates frequency based time phase one two methods: 'deriv' Takes derivative phase vs time get frequency 'slope' Fits line phase vs time uses slope estimate frequency.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates the cycle frequency based on time and phase — get_frequency","text":"","code":"get_frequency(   t,   ph,   unwrap = FALSE,   method = \"deriv\",   mod = 2 * pi,   check_reasonableness = TRUE )"},{"path":"https://tytell.github.io/fishmechr/reference/get_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates the cycle frequency based on time and phase — get_frequency","text":"t Time ph Phase unwrap (TRUE FALSE) Unwrap phase. Note function work unless phase unwrapped, set unwrap FALSE phase unwrapped earlier. method ('deriv' 'slope') Estimate frequency based mod Modulus phase. Default 2*pi. check_reasonableness Runs simple checks make sure data make sense. Checks make sure phase mostly increasing warns .","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates the cycle frequency based on time and phase — get_frequency","text":"frequency estimate, either vector size ph ('deriv' algorithm) single value ('slope' algorithm)","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_frequency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimates the cycle frequency based on time and phase — get_frequency","text":"","code":"t <- seq(0, 3, by=0.1) # example phase that has a frequency of exactly 2.3 Hz ph <- 2*pi*(t * 2.3)  get_frequency(t, ph) #>  [1] 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 #> [20] 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3 2.3"},{"path":"https://tytell.github.io/fishmechr/reference/get_midline_center_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the center of a midline for many midlines in a data frame — get_midline_center_df","title":"Gets the center of a midline for many midlines in a data frame — get_midline_center_df","text":"Estimates center midline based mass distribution, volume distribution, body width.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_midline_center_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the center of a midline for many midlines in a data frame — get_midline_center_df","text":"","code":"get_midline_center_df(   .data,   arclen,   x,   y,   mass,   width,   height,   .out = NULL,   .frame = frame,   .point = point,   method = \"mutate\",   overwrite = TRUE )"},{"path":"https://tytell.github.io/fishmechr/reference/get_midline_center_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the center of a midline for many midlines in a data frame — get_midline_center_df","text":".data Data frame containing midlines. arclen column containing arc length. See arclength() x, y Columns containing x y coordinates midline. N points. mass (optional) Column containing mass segment, N-1 segments. width (optional) Column containing horizontal plane width body midline point (N points) height (optional) Column containing dorso-ventral height body midline point (N points) .Names output columns. Needs two elements specifying names x y coordinates center position. can named list containing least elements xctr yctr. return elements named list, defaults 'xcom' 'ycom') .frame, .point Columns identifying frames points (defaults frame point) method 'mutate' 'summarize'. summarize, returns one center position frame. mutate, returns center position repeated point frame. overwrite TRUE FALSE overwrite existing columns, present. cutoff (optional) parameter included, smooth swimming axis data low-pass filter cutoff frequency.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_midline_center_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the center of a midline for many midlines in a data frame — get_midline_center_df","text":"data frame containing original variables along xcom, ycom (names specified .). center midline frame.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_midline_center_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets the center of a midline for many midlines in a data frame — get_midline_center_df","text":"Given mass distribution, produces estimates true center mass. given body width height, assumes body oval cross section varying width height, estimates volume distribution. method give good estimate center mass body close uniform density. given just width, uses width estimate weight average centroid position.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_midline_center_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the center of a midline for many midlines in a data frame — get_midline_center_df","text":"","code":"lampreydata |>   group_by(frame) |>   mutate(arclen = arclength(mxmm, mymm),          width = interpolate_width(fishwidth$s, fishwidth$ammowidth, arclen)) |>   get_midline_center_df(arclen, mxmm,mymm, width=width) #> Error in mutate(group_by(lampreydata, frame), arclen = arclength(mxmm,     mymm), width = interpolate_width(fishwidth$s, fishwidth$ammowidth,     arclen)): could not find function \"mutate\""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the main swimming axis from a midline — get_primary_swimming_axis","title":"Gets the main swimming axis from a midline — get_primary_swimming_axis","text":"Computes main swimming axis midline unit vector, using singular value decomposition (svd()). works well midlines centered around zero, optionally subtracts mean x y.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the main swimming axis from a midline — get_primary_swimming_axis","text":"","code":"get_primary_swimming_axis(x, y, center = TRUE)"},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the main swimming axis from a midline — get_primary_swimming_axis","text":"x, y Coordinates midline center (TRUE FALSE) Subtract mean x y coordinates","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the main swimming axis from a midline — get_primary_swimming_axis","text":"data frame following columns: swimaxis_x, swimaxis_y x y components swimming axis vector swimaxis_xctr, swimaxis_yctr Mean x y values subtracted running SVD","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the main swimming axis from a midline — get_primary_swimming_axis","text":"","code":"# run the algorithm across multiple midlines at different times lampreydata |>   group_by(t) |>   summarize(swimaxis = get_primary_swimming_axis(mxmm, mymm)) |>   unnest(swimaxis) #> Error in unnest(summarize(group_by(lampreydata, t), swimaxis = get_primary_swimming_axis(mxmm,     mymm)), swimaxis): could not find function \"unnest\""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the primary swimming axis for many midlines — get_primary_swimming_axis_df","title":"Gets the primary swimming axis for many midlines — get_primary_swimming_axis_df","text":"Processes midlines many frames video","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the primary swimming axis for many midlines — get_primary_swimming_axis_df","text":"","code":"get_primary_swimming_axis_df(   .data,   t,   x,   y,   .out = NULL,   .frame = frame,   .point = point,   cutoff = NULL,   overwrite = TRUE,   check_reasonableness = TRUE )"},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the primary swimming axis for many midlines — get_primary_swimming_axis_df","text":".data Data frame containing midline data t Column containing time data. cutoff frequency passed , variable used get sampling frequency. x, y Columns containing x y coordinates point along midline. .Names output columns. Needs four elements specifying names x y coordinates swim axis parallel perpendicular components excursion, order. can named list containing least elements swimaxis_x, swimaxis_y, exc_x, exc, order. return elements named list, defaults 'swimaxis_x', 'swimaxis_y', 'exc_x', 'exc_y') .frame, .point Columns identifying frames points (defaults frame point) cutoff (optional) parameter included, smooth swimming axis data low-pass filter cutoff frequency.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the primary swimming axis for many midlines — get_primary_swimming_axis_df","text":"data frame containing original variables along XX_ctr,YY_ctr: center midline time, XX YY original names x y coordinates. ,b: new midlines centered projected swimming direction perpendicular axis. b useful lateral excursion swimming undulation.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_primary_swimming_axis_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets the primary swimming axis for many midlines — get_primary_swimming_axis_df","text":"Uses get_primary_swimming_axis() compute swimming axis midline. optionally smooths axis using Butterworth filter, projects midlines new time-varying axes.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the volume of segments of a cylindrical body with elliptical cross section — get_volume","title":"Gets the volume of segments of a cylindrical body with elliptical cross section — get_volume","text":"Used estimating center mass fish. know width height profile, assume cross section elliptical, can estimate volume segment volume truncated elliptical cone.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the volume of segments of a cylindrical body with elliptical cross section — get_volume","text":"","code":"get_volume(arclen, width, height)"},{"path":"https://tytell.github.io/fishmechr/reference/get_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the volume of segments of a cylindrical body with elliptical cross section — get_volume","text":"arclen, width, height Arc length, width height. units. N points","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the volume of segments of a cylindrical body with elliptical cross section — get_volume","text":"Volume segment (N-1 values). Last value NA","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_volume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets the volume of segments of a cylindrical body with elliptical cross section — get_volume","text":"formula cone V = pi s (w h + 1/2 dw h + 1/2 dh w + 1/3 dw dh) s length cone, w h half width height, dw dh difference width height one end (e.g., dw = w(s) - w(0) w function s)","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_wavelength.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the body wavelength based on the phase at each point and the arc length — get_wavelength","title":"Computes the body wavelength based on the phase at each point and the arc length — get_wavelength","text":"Computes spatial derivative phase relative arc length using several different possible methods: 'deriv' Computes derivative directly using deriv() 'slope' Fits line phase relative arc length uses slope line estimate wavelength 'cycle' Looks pairs points along body phase differs full cycle. arc length points one wavelength. 'halfcycle' Looks pairs points along body phase differs one half cycle. arc length points half wavelength.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_wavelength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the body wavelength based on the phase at each point and the arc length — get_wavelength","text":"","code":"get_wavelength(   arclen,   ph,   unwrap = TRUE,   method = \"deriv\",   ignore_arclen_vals = NULL,   sort_arclen = FALSE,   check_reasonableness = TRUE,   mod = 2 * pi,   traveling_wave_dir = -1 )"},{"path":"https://tytell.github.io/fishmechr/reference/get_wavelength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the body wavelength based on the phase at each point and the arc length — get_wavelength","text":"arclen Arc length ph Phase unwrap (TRUE FALSE) Unwrap phase along body method ('deriv', 'slope', 'cycle', 'halfcycle') explained ignore_arclen_vals NULL function returns TRUE FALSE certain values arclength phase estimate reliable. often used exclude points near head (e.g., ignore_arclen_vals = \\(s) s < 0.3) mod Modulus phase variable traveling_wave_dir (1 -1) Defines direction traveling wave. normal head--tail traveling wave, use -1 (default)","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_wavelength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the body wavelength based on the phase at each point and the arc length — get_wavelength","text":"wavelength vector size phase variable","code":""},{"path":"https://tytell.github.io/fishmechr/reference/get_wavelength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the body wavelength based on the phase at each point and the arc length — get_wavelength","text":"","code":"s <- seq(0, 1, by=0.1) # artificial data with a wavelength of exactly 0.6 ph <- 2*pi*((1 - s) / 0.6)  get_wavelength(s, ph, ignore_arclen_vals = \\(s) s < 0.3) #>  [1]  NA  NA  NA 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6"},{"path":"https://tytell.github.io/fishmechr/reference/hilbert_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute phase of an oscillation using the Hilbert transform — hilbert_phase","title":"Compute phase of an oscillation using the Hilbert transform — hilbert_phase","text":"Compute phase oscillation using Hilbert transform","code":""},{"path":"https://tytell.github.io/fishmechr/reference/hilbert_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute phase of an oscillation using the Hilbert transform — hilbert_phase","text":"","code":"hilbert_phase(x, na.skip = TRUE, unwrap = TRUE, check_reasonableness = TRUE)"},{"path":"https://tytell.github.io/fishmechr/reference/hilbert_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute phase of an oscillation using the Hilbert transform — hilbert_phase","text":"check_reasonableness","code":""},{"path":"https://tytell.github.io/fishmechr/reference/hilbert_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute phase of an oscillation using the Hilbert transform — hilbert_phase","text":"Phase","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_peak_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate the location of a peak based on three points — interpolate_peak_location","title":"Interpolate the location of a peak based on three points — interpolate_peak_location","text":"Uses parabolic approximation determine location peak 3 points.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_peak_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate the location of a peak based on three points — interpolate_peak_location","text":"","code":"interpolate_peak_location(y, x = c(-1, 0, 1))"},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_peak_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate the location of a peak based on three points — interpolate_peak_location","text":"x","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolates and smooths a 2D curve at new arc length — interpolate_points_df","title":"Interpolates and smooths a 2D curve at new arc length — interpolate_points_df","text":"2D curve (x,y) coordinates parameterized arc length, interpolate new (x,y) coordinates new arc lengths. Smooth input data smoothing spline.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolates and smooths a 2D curve at new arc length — interpolate_points_df","text":"","code":"interpolate_points_df(   .data,   arclen,   x,   y,   arclen_out = NULL,   spar = 0.8,   tailmethod = \"extrapolate\",   .suffix = \"_s\",   .out = NULL,   overwrite = TRUE,   .frame = frame,   .point = point )"},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolates and smooths a 2D curve at new arc length — interpolate_points_df","text":".data Data frame arclen Name input arc length column .data x, y Name columns contain coordinates points curve arclen_out Vector containing new arc length spar Smoothing parameter (ranges 0 smoothing 1 high smoothing; see smooth.spline() details.) tailmethod ('keep', 'extrapolate', 'NA') Methods estimate position tail tip last value arclength_out longer maximum arc length current frame. 'keep' keep existing tail point, even requested arc length 'extrapolate' extrapolate tail tip position, assuming curve continues straight 'NA' use replace tail point NA case. .suffix (default = '_s') Suffix append names arclen, x, y columns smoothing interpolation. .Names output columns. Defaults (arclen = 'arclen_s', xs = 'xs', ys = 'ys'). Overrides .suffix parameter included. overwrite TRUE FALSE overwrite existing columns .frame Name frame variable data frame .point Name point variable data frame","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolates and smooths a 2D curve at new arc length — interpolate_points_df","text":"data frame updated columns smoothed iterpolated arc length, x y coordinates.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolates and smooths a 2D curve at new arc length — interpolate_points_df","text":"Operates frame (defined .frame parameter) individually.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolates x and y points on a curve to different arc lengths — interpolate_points_frame","title":"Interpolates x and y points on a curve to different arc lengths — interpolate_points_frame","text":"2D curve (x,y) coordinates parameterized arc length, interpolate new (x,y) coordinates new arc lengths. Smooth input data smoothing spline.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolates x and y points on a curve to different arc lengths — interpolate_points_frame","text":"","code":"interpolate_points_frame(arclen, x, y, arclen_out, spar = 0.1)"},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolates x and y points on a curve to different arc lengths — interpolate_points_frame","text":"arclen Input arc length x, y Coordinates points curve arclen_out New arc length spar Smoothing parameter (ranges 0 smoothing 1 high smoothing; see smooth.spline() details.)","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_points_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolates x and y points on a curve to different arc lengths — interpolate_points_frame","text":"tibble containing new interpolated smoothed x y coordinates columns xs ys","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolates and scales fish body width — interpolate_width","title":"Interpolates and scales fish body width — interpolate_width","text":"Interpolates width new arc length scales based body length. Assumes input width arc length units (fractions body length, cm, pixels, long ). width estimated new arc length, scales based new maximum length.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolates and scales fish body width — interpolate_width","text":"","code":"interpolate_width(arclen0, width0, arclen)"},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolates and scales fish body width — interpolate_width","text":"arclen0 Arc length width measurement width0 Width measurement. units arclen0 arclen New arc length","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolates and scales fish body width — interpolate_width","text":"Width new values arc length, scaled new length","code":""},{"path":"https://tytell.github.io/fishmechr/reference/interpolate_width.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolates and scales fish body width — interpolate_width","text":"Width defined distance one side body (like diameter), center side (like radius).","code":""},{"path":"https://tytell.github.io/fishmechr/reference/peak_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute phase of an oscillation by locating peaks and zero crossings — peak_phase","title":"Compute phase of an oscillation by locating peaks and zero crossings — peak_phase","text":"Compute phase oscillation locating peaks zero crossings","code":""},{"path":"https://tytell.github.io/fishmechr/reference/peak_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute phase of an oscillation by locating peaks and zero crossings — peak_phase","text":"","code":"peak_phase(   x,   unwrap = TRUE,   check_reasonableness = TRUE,   check_ordering = TRUE,   interpolate_peaks = TRUE,   interpolate_zeros = TRUE,   zero_mode = \"midpoint\",   ... )"},{"path":"https://tytell.github.io/fishmechr/reference/peak_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute phase of an oscillation by locating peaks and zero crossings — peak_phase","text":"...","code":""},{"path":"https://tytell.github.io/fishmechr/reference/skip_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip NAs when running a function on a vector — skip_na","title":"Skip NAs when running a function on a vector — skip_na","text":"skip_na() helper function related na.omit(). runs function f vector may contain NAs NaNs, skipping NAs, returns results vector length x NAs places.","code":""},{"path":"https://tytell.github.io/fishmechr/reference/skip_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip NAs when running a function on a vector — skip_na","text":"","code":"skip_na(x, f, min.len = 1, ...)"},{"path":"https://tytell.github.io/fishmechr/reference/skip_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skip NAs when running a function on a vector — skip_na","text":"x vector may NAs f function run vector ... parameters supply function","code":""},{"path":"https://tytell.github.io/fishmechr/reference/skip_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip NAs when running a function on a vector — skip_na","text":"vector length x NAs places","code":""},{"path":"https://tytell.github.io/fishmechr/reference/skip_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip NAs when running a function on a vector — skip_na","text":"","code":"x <- c(1,2,3,NA,4,5,6,NA,7,8) skip_na(x, cumsum) #>  [1]  1  3  6 NA 10 15 21 NA 28 36 # should return a vector the same length as x with NAs in position 4 and 8"}]
